source ~/.dotfiles/zsh/exports.sh


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH="$HOME/.dotfiles/zsh/oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="norm" #"lambda"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

# User configuration

#--------------------------------------------------------------
#                        e x p o r t s
#--------------------------------------------------------------
# export EDITOR=nano
# export VBOX_USB=usbfs
# export SVN_EDITOR=nano

# export JAVA_HOME=/usr/lib/jvm/java-7-openjdk/
# export PATH=$PATH:/home/diego/storage/bin:/home/diego/.local/bin/:/home/diego/.cabal/bin
# export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias ..='cd ..'
alias sx='subl3'
alias xx='xmonad --restart'
alias xxr='xmonad --replace &'
alias xxk='killall conky dzen2'
alias xxx='xmonad --recompile && xmonad --restart'
# alias prende='sudo mount /dev/mapper/shelf4tb /mnt/shelf && sudo systemctl start emby-server.service'
## borra todos los archivos de 0  bytes
alias borravacio='find . -size 0c -delete'
alias cuenta='expr `ls -l | wc -l` - 1'

#--------------------------------------------------------------
#           c o n e x i o n e s    r e m o t a s 
#--------------------------------------------------------------

alias ada='ssh -D 8080 dmurillo@ada.fciencias.unam.mx'


hack() {
  ssh 192.168.100.$1
}

gkmount() {
  sshfs diego@192.168.100.$1:/home/diego /mnt/bob/ -C -o nonempty
}

gkumount() {
  fusermount -u /mnt/bob
}

#--------------------------------------------------------------
#                  H o u s e K e e p i n g 
#--------------------------------------------------------------

alias aurLista='pacman -Qm'

## Delete all files of size zero
## Recursive?
alias sopla='find . -size 0c -delete'


prende() {
  sudo mount /dev/mapper/shelf4tb /mnt/shelf && sudo systemctl start emby-server.service
  kb
}

 ## Remove orphan pacman packages
orphans() {
  if [[ ! -n $(pacman -Qdt) ]]; then
    echo no orphans to remove
  else
    sudo pacman -Rs $(pacman -Qdtq)
  fi
}

alias red='ping -c 3 www.google.com'

## Reload this
alias :r='source /home/diego/.zshrc'


extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
            *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
                   c=(bsdtar xvf);;
            *.7z)  c=(7z x);;
            *.Z)   c=(uncompress);;
            *.bz2) c=(bunzip2);;
            *.exe) c=(cabextract);;
            *.gz)  c=(gunzip);;
            *.rar) c=(unrar x);;
            *.xz)  c=(unxz);;
            *.zip) c=(unzip);;
            *)     echo "$0: unrecognized file extension: \`$i'" >&2
                   continue;;
        esac

        command "${c[@]}" "$i"
        ((e = e || $?))
    done
    return "$e"
}



## Recibe el valor mas grande
## https://unix.stackexchange.com/questions/236164/how-to-find-missing-files-with-sequential-names
missing () {
  ub=$(ls | sort -n | tail -n 1 | xargs basename -s .jpg)
  seq "$ub" | while read -r i; do
    [[ -f "$i.jpg" ]] || echo "$i.jpg is missing"
  done
}


